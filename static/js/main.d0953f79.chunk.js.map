{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/movies.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","URL","getMovie","value","a","fetch","then","response","json","catch","error","FindMovie","addMovie","useState","setTitle","movieFounded","setMovieFounded","warning","setWarning","createMovie","Title","Plot","Poster","imdbID","undefined","newMovie","htmlFor","onChange","event","target","type","id","placeholder","onClick","App","state","data","some","filmItem","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d0953f79.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const URL = `https://www.omdbapi.com/?apikey=53f175f9&t=`;\n\nexport async function getMovie(value) {\n  return fetch(`${URL}${value}`)\n    .then(response => response.json())\n    .catch(error => error);\n}\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/movies';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [movieFounded, setMovieFounded] = useState();\n  const [warning, setWarning] = useState(true);\n\n  async function getData() {\n    const movie = await getMovie(title);\n\n    createMovie(movie);\n  }\n\n  const createMovie = ({ Title, Plot, Poster, imdbID }) => {\n    if (Title === undefined) {\n      setMovieFounded(null);\n      setWarning(false);\n\n      return;\n    }\n\n    const newMovie = {\n      title: Title,\n      description: Plot,\n      imgUrl: Poster,\n      imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n      imdbId: imdbID,\n    };\n\n    setMovieFounded(newMovie);\n  };\n\n  const clearFrom = () => {\n    addMovie(movieFounded);\n    setMovieFounded('');\n    setTitle('');\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              value={title}\n              onChange={((event) => {\n                setTitle(event.target.value);\n                setWarning(true);\n              })}\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n            />\n          </div>\n\n          {\n            !warning && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n            )\n          }\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={getData}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={\n                () => movieFounded && clearFrom()\n              }\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movieFounded && <MovieCard {...movieFounded} /> }\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n  };\n\n  addMovie = (movie) => {\n    const inTheList = this.state.movies\n      .some(filmItem => filmItem.title === movie.title);\n\n    if (inTheList) {\n      this.setState(state => ({\n        movies: [...state.movies, movie],\n      }));\n    }\n  }\n\n  render() {\n    const { movies } = this.state;\n    const { addMovie } = this;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie\n            addMovie={addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}